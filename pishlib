#
# pishlib
#
## Library of helper functions for shell scripts on the Raspberry Pi
## range of computers.
##
## Add '. /path/to/pishlib' to your shell script to use the functions.
##
## Released under the MIT licence
## Copyright (c) 2020 Russell Armstrong
#

#######################
##                   ##
## Memmory functions ##
##                   ##
#######################

pl-sys_mem() {   

    case $1 in

      "")
        # Get system mem Size. Return int as Mb
        echo $(__mem_total)
        ;;

      eq)
        # System mem = $2? Return bool.
        [[ $(__mem_total) -eq $2 ]]
        ;;

      lt)
        # System mem < to $2? Return bool.
        [[ $(__mem_total) -lt $2 ]]
        ;;

      gt)
        # System mem > to $2? Return bool.
        [[ $(__mem_total) -gt $2 ]]
        ;;

      is256m)
        [[ $(__mem_total) -lt 256 ]]
      ;;

      is512m)
        [[ $(__mem_total) -lt 512 ]] && [[ $(__mem_total) -gt 256 ]]
      ;;

      is1g)
        [[ $(__mem_total) -lt 1024 ]] && [[ $(__mem_total) -gt 512 ]]
      ;;

      is2g)
        [[ $(__mem_total) -lt 2048 ]] && [[ $(__mem_total) -gt 1024 ]]
      ;;


      is4g)
        [[ $(__mem_total) -lt 4096 ]] && [[ $(__mem_total) -gt 2048 ]]
      ;;

      is8g)
        [[ $(__mem_total) -lt 8192 ]] && [[ $(__mem_total) -gt 4096 ]]
      ;;

      ramdisk)
        __mem_rdisk
        return $?
      ;;

      zswap)
        __mem_zswap
        return $?
      ;;

      swap)
        __mem_swap
        return $?
      ;;

      *)
        return 1
        ;;

    esac
}

__mem_total () {
    mem=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
    echo $(( $mem / 1024 ))
}

__mem_rdisk() {
  return
}

__mem_zswap() {
  return
}

__mem_swap() {
  return
}



###################
##               ##
## GPU functions ##
##               ##
###################

pl-gpu_mem() {
    
    case $1 in

      "")
        pl-gpu_mem_get
        ;;

      default)
        if [[ pl-model_is1 ]] | [[ pl-model_iszero ]]; then
            pl-gpu_mem=64
        else
            pl-gpu_mem=76
        fi
        pl-gpu_mem_set $gpu_mem
        ;;

      max)
        if [[ pl-mem_is256m ]]; then
            pl-gpu_mem=128
        elif [[ pl-mem_is512m ]]; then
            pl-gpu_mem=384
        elif [[ $(pl-mem_greater 512) ]]; then
            pl-gpu_mem=512
        fi
        pl-gpu_mem_set $gpu_mem
        ;;

      *)
        return 1
        ;;
    esac
}

pl-gpu_mem_get() {
    if [ -f "/usr/bin/vcgencmd" ; then
        gpu_mem=`vcgencmd get_mem gpu | sed 's/[^0-9]*//g'`
    else
        gpu_mem=`sed 's/[^0-9]*//g' /boot/config.txt`
    fi
    echo $(gpu_mem)
}

pl-gpu_mem_set() {
    sed -ri "s/gpu_mem=[0-9]+/gpu_mem=$1/g" /boot/config.txt
}

#####################
##                 ##
## Model functions ##
##                 ##
#####################

model=`cat /sys/firmware/devicetree/base/model`

pl-model_is1() {
	return 0
}

pl-model_iszero() {
	return 0
}
