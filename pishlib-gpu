source pishlib-model
source pishlib-mem

BOOT_CONF_FILE="/boot/config.txt"
VCGENCMD="/usr/bin/vcgencmd"

pl_gpu_mem() {

  case $1 in

    "")
      __pl_gpu_get_mem
      ;;

    default)
      __pl_gpu_set "$(__pl_gpu_get_default_mem)"
      ;;

    max)
      # TODO: this needs testing
      __pl_gpu_set "$(__pl_gpu_get_max_mem)"
      ;;

    *)
      # TODO: this needs testing
      if [[ $(__pl_gpu_insane_setting $1) ]]; then
        return 1
      elif ! [[ $(__pl_gpu_insane_setting $1) ]]; then
        __pl_gpu_set "$1"
      else
        return 1
      fi
      ;;
  esac
}
 
__pl_gpu_get_mem() {
  # extract gpu_mem int from config, it may return ""
  __gpu_mem="$(sed 's/[^0-9]*//g' $BOOT_CONF_FILE)"

  if [[ -f $VCGENCMD ]]; then
    # best option if we have vcgencmd
    __gpu_mem=$("$VCGENCMD" get_mem gpu | sed 's/[^0-9]*//g')
  elif [[ $__gpu_mem -eq "" ]]; then
    # gpu_mem not defined in /boot/config.txt
    __gpu_mem=$(__pl_gpu_get_default_mem)
  fi
  echo "$__gpu_mem"
}

__pl_gpu_get_default_mem() {
  # TODO: this needs testing
  if [[ "$(pl-model is1)" -eq 0 ]] || [[ "$(pl-model isZero)" -eq 0 ]]; then
      __gpu_mem=64
  else
      __gpu_mem=76
  fi
  echo $"__gpu_mem"
}

__pl_gpu_get_max_mem() {
  if [[ "$(pl-mem is256m)" ]]; then
    __gpu_mem=128
  elif [[ "$(pl-mem is512m)" ]]; then
    __gpu_mem=384
  elif [[ "$(pl-mem gt 512)" ]]; then
    __gpu_mem=512
  fi
  echo $"__gpu_mem"
}

__pl_gpu_insane_setting() {
  # less than 16 may prevent pi from booting
  # more than 1024 doesn't make sense
  if [[ "$1" -lt 16 ]] || [[ "$1" -gt 1024 ]]; then
    echo 0
  fi
}

__pl_gpu_set() {
  if [[ $(grep -E ".*#.*gpu_mem" $BOOT_CONF_FILE) ]]; then
    # gpu_mem in config.txt but commented out
    sed -Eri "s/^.*#.*gpu_mem=[0-9]*$/gpu_mem=$1/g" $BOOT_CONF_FILE
  elif [[ $(grep "gpu_mem" $BOOT_CONF_FILE) ]]; then
    # gpu_mem in config.txt
    sed -Eri "s/^gpu_mem=[0-9]*$/gpu_mem=$1/g" $BOOT_CONF_FILE
  else
    # gpu_mem not in config.txt
    echo "gpu_mem=$1" >> $BOOT_CONF_FILE
  fi
}