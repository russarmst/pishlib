#!/usr/bin/env bash

pl_cpu() {
    case $1 in
      freq_current)
        echo "$(__pl_cpu_freq_cur)"
        ;;
      freq_min)
        echo "$(__pl_cpu_freq_min)"
        ;;
      freq_max)
        echo "$(__pl_cpu_freq_max)"
        ;;
      govenor)
        echo "$(__pl_cpu_govenor $@)"
        ;;
      govenor_up_threshold)
        echo "$(__pl_cpu_gov_up_threshold $@)"
        ;;
      govenor_down_threshold)
        echo "$(__pl_cpu_gov_down_threshold $@)"
        ;;
      temp)
        echo "$(__pl_cpu_temp)"
        ;;
    esac
}

__pl_cpu_freq_cur() {
  echo "$(/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq)"

}

__pl_cpu_freq_min() {
    echo "$(/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq)"
}

__pl_cpu_freq_max() {
  echo "$(/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq)"
}

__pl_cpu_govenor() {
  if [[ $2 = "" ]]; then
    echo "$(__pl_cpu_get_govenor)"
  else
    echo "$(__pl_cpu_set_govenor)"
  fi
}

__pl_cpu_gov_up_threshold() {
  if [[ ! $(__pl_cpu_govenor_is_ondemand) ]]; then
    return 1
  fi
  if [[ $2 = "" ]]; then
    echo "$(__pl_cpu_get_up_threshold)"
  else
    echo "$(__pl_cpu_set_up_threshold)"
  fi
}

__pl_cpu_gov_down_threshold() {
  if [[ $2 = "" ]]; then
    echo "$(__pl_cpu_get_down_threshold)"
  else
    echo "$(__pl_cpu_set_down_threshold)"
  fi
}

__pl_cpu_temp() {
  temp=$(cat /sys/class/thermal/thermal_zone0/temp)
  echo "$temp"
}

__pl_cpu_get_govenor() {
  echo "$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)"
}

__pl_cpu_set_govenor() {
  return
}

cpu_get_up_threshold() {
  local govenor="$(__pl_cpu_get_govenor)"
  echo "$(cat /sys/devices/system/cpu/cpufreq/$govenor/up_threshold)"
}

cpu_set_up_threshold() {
  return
}

cpu_get_down_threshold() {
  local govenor="$(__pl_cpu_get_govenor)"
  echo "$(cat /sys/devices/system/cpu/cpufreq/$govenor/down_threshold)"
}

cpu_set_down_threshold() {
  return
}

__pl_cpu_govenor_is_ondemand() {
  if [[ "$(__pl_cpu_get_govenor)" = ondemand ]]; then
    return 0
  else
    return 1
  fi
}