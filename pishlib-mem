#!/usr/bin/env bash

source pishlib-model
source ./libs/boot_config/boot_config

pl_mem() {

    case $1 in

      "")
        echo $(__pl_mem_as_mb)
        ;;

      eq)
        [[ $(__pl_mem_as_mb) -eq $2 ]]
        ;;

      lt)
        [[ $(__pl_mem_as_mb) -lt $2 ]]
        ;;

      gt)
        [[ $(__pl_mem_as_mb) -gt $2 ]]
        ;;

      is)
        [[ $(pl_model memory) -eq $2 ]]
        ;;

      limit)
        __pl_mem_limit $2
        return $?
        ;;

      ramdisk)
      # TODO: break out into seperate module
      
        __pl_mem_rdisk
        return $?
      ;;

      zswap)
      # TODO: break out into seperate module
        __pl_mem_zswap
        return $?
      ;;

      swap)
      # TODO: break out into seperate module
        __pl_mem_swap
        return $?
      ;;

      *)
        return 1
        ;;

    esac
}

__pl_mem_as_mb () {
    printf "%d\n" $(( $(__pl_get_mem_as_kb) / 1024 ))
}

__pl_get_mem_as_kb() {
  awk '/MemTotal/ {print $2}' /proc/meminfo
}

__pl_mem_rdisk() {
  # TODO: break out into seperate module
  return
}

__pl_mem_zswap() {
  # TODO: break out into seperate module
  return
}

__pl_mem_swap() {
  # TODO: break out into seperate module
  return
}

__pl_mem_limit() {
  # TODO: added anity checking of mem_limit
  local mem_limit=$1
  if [[ $(boot_config contains total_mem) ]]; then
    boot_config change_property_value total_mem "$mem_limit"
  else
    boot_config append_property total_mem "$mem_limit"
  fi
}